//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HexGridComponent hexGrid { get { return (HexGridComponent)GetComponent(GameComponentsLookup.HexGrid); } }
    public bool hasHexGrid { get { return HasComponent(GameComponentsLookup.HexGrid); } }

    public void AddHexGrid(int newRadius) {
        var index = GameComponentsLookup.HexGrid;
        var component = CreateComponent<HexGridComponent>(index);
        component.radius = newRadius;
        AddComponent(index, component);
    }

    public void ReplaceHexGrid(int newRadius) {
        var index = GameComponentsLookup.HexGrid;
        var component = CreateComponent<HexGridComponent>(index);
        component.radius = newRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveHexGrid() {
        RemoveComponent(GameComponentsLookup.HexGrid);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHexGrid;

    public static Entitas.IMatcher<GameEntity> HexGrid {
        get {
            if (_matcherHexGrid == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HexGrid);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHexGrid = matcher;
            }

            return _matcherHexGrid;
        }
    }
}
